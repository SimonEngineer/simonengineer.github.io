/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestGithubImport } from './routes/testGithub'
import { Route as ConfigureImport } from './routes/configure'
import { Route as AuthImport } from './routes/auth'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as TestTestpathImport } from './routes/test/testpath'
import { Route as HealthWeightGraphImport } from './routes/health/weightGraph'
import { Route as HealthWeightEntriesImport } from './routes/health/weightEntries'
import { Route as AboutEditImport } from './routes/about/edit'

// Create/Update Routes

const TestGithubRoute = TestGithubImport.update({
  id: '/testGithub',
  path: '/testGithub',
  getParentRoute: () => rootRoute,
} as any)

const ConfigureRoute = ConfigureImport.update({
  id: '/configure',
  path: '/configure',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const TestTestpathRoute = TestTestpathImport.update({
  id: '/test/testpath',
  path: '/test/testpath',
  getParentRoute: () => rootRoute,
} as any)

const HealthWeightGraphRoute = HealthWeightGraphImport.update({
  id: '/health/weightGraph',
  path: '/health/weightGraph',
  getParentRoute: () => rootRoute,
} as any)

const HealthWeightEntriesRoute = HealthWeightEntriesImport.update({
  id: '/health/weightEntries',
  path: '/health/weightEntries',
  getParentRoute: () => rootRoute,
} as any)

const AboutEditRoute = AboutEditImport.update({
  id: '/about/edit',
  path: '/about/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/configure': {
      id: '/configure'
      path: '/configure'
      fullPath: '/configure'
      preLoaderRoute: typeof ConfigureImport
      parentRoute: typeof rootRoute
    }
    '/testGithub': {
      id: '/testGithub'
      path: '/testGithub'
      fullPath: '/testGithub'
      preLoaderRoute: typeof TestGithubImport
      parentRoute: typeof rootRoute
    }
    '/about/edit': {
      id: '/about/edit'
      path: '/about/edit'
      fullPath: '/about/edit'
      preLoaderRoute: typeof AboutEditImport
      parentRoute: typeof rootRoute
    }
    '/health/weightEntries': {
      id: '/health/weightEntries'
      path: '/health/weightEntries'
      fullPath: '/health/weightEntries'
      preLoaderRoute: typeof HealthWeightEntriesImport
      parentRoute: typeof rootRoute
    }
    '/health/weightGraph': {
      id: '/health/weightGraph'
      path: '/health/weightGraph'
      fullPath: '/health/weightGraph'
      preLoaderRoute: typeof HealthWeightGraphImport
      parentRoute: typeof rootRoute
    }
    '/test/testpath': {
      id: '/test/testpath'
      path: '/test/testpath'
      fullPath: '/test/testpath'
      preLoaderRoute: typeof TestTestpathImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/configure': typeof ConfigureRoute
  '/testGithub': typeof TestGithubRoute
  '/about/edit': typeof AboutEditRoute
  '/health/weightEntries': typeof HealthWeightEntriesRoute
  '/health/weightGraph': typeof HealthWeightGraphRoute
  '/test/testpath': typeof TestTestpathRoute
  '/about': typeof AboutIndexRoute
  '/projects': typeof ProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/configure': typeof ConfigureRoute
  '/testGithub': typeof TestGithubRoute
  '/about/edit': typeof AboutEditRoute
  '/health/weightEntries': typeof HealthWeightEntriesRoute
  '/health/weightGraph': typeof HealthWeightGraphRoute
  '/test/testpath': typeof TestTestpathRoute
  '/about': typeof AboutIndexRoute
  '/projects': typeof ProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/configure': typeof ConfigureRoute
  '/testGithub': typeof TestGithubRoute
  '/about/edit': typeof AboutEditRoute
  '/health/weightEntries': typeof HealthWeightEntriesRoute
  '/health/weightGraph': typeof HealthWeightGraphRoute
  '/test/testpath': typeof TestTestpathRoute
  '/about/': typeof AboutIndexRoute
  '/projects/': typeof ProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/configure'
    | '/testGithub'
    | '/about/edit'
    | '/health/weightEntries'
    | '/health/weightGraph'
    | '/test/testpath'
    | '/about'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/configure'
    | '/testGithub'
    | '/about/edit'
    | '/health/weightEntries'
    | '/health/weightGraph'
    | '/test/testpath'
    | '/about'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/configure'
    | '/testGithub'
    | '/about/edit'
    | '/health/weightEntries'
    | '/health/weightGraph'
    | '/test/testpath'
    | '/about/'
    | '/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRoute
  ConfigureRoute: typeof ConfigureRoute
  TestGithubRoute: typeof TestGithubRoute
  AboutEditRoute: typeof AboutEditRoute
  HealthWeightEntriesRoute: typeof HealthWeightEntriesRoute
  HealthWeightGraphRoute: typeof HealthWeightGraphRoute
  TestTestpathRoute: typeof TestTestpathRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  ConfigureRoute: ConfigureRoute,
  TestGithubRoute: TestGithubRoute,
  AboutEditRoute: AboutEditRoute,
  HealthWeightEntriesRoute: HealthWeightEntriesRoute,
  HealthWeightGraphRoute: HealthWeightGraphRoute,
  TestTestpathRoute: TestTestpathRoute,
  AboutIndexRoute: AboutIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/configure",
        "/testGithub",
        "/about/edit",
        "/health/weightEntries",
        "/health/weightGraph",
        "/test/testpath",
        "/about/",
        "/projects/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/configure": {
      "filePath": "configure.tsx"
    },
    "/testGithub": {
      "filePath": "testGithub.tsx"
    },
    "/about/edit": {
      "filePath": "about/edit.tsx"
    },
    "/health/weightEntries": {
      "filePath": "health/weightEntries.tsx"
    },
    "/health/weightGraph": {
      "filePath": "health/weightGraph.tsx"
    },
    "/test/testpath": {
      "filePath": "test/testpath.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
